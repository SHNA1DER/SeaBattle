import pytest
from unittest import mock


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é draw_point
from ..src.SeaBattle import draw_point

@mock.patch('..src.SeaBattle.canvas')
def test_draw_point_zero(mock_canvas):
    # –°–æ–∑–¥–∞–µ–º mock –¥–ª—è enemy_ships1
    enemy_ships1 = [[0]]
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    draw_point(0, 0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ create_text –±—ã–ª –≤—ã–∑–≤–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    mock_canvas.create_text.assert_called_once_with(
        10,  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X
        20,  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã Y
        text='üí¶',
        font=(60, 60),
        fill="lightcyan",
    )

@mock.patch('..src.SeaBattle.canvas')
def test_draw_point_greater_than_zero(mock_canvas):
    # –°–æ–∑–¥–∞–µ–º mock –¥–ª—è enemy_ships1
    enemy_ships1 = [[1]]
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    draw_point(0, 0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ create_text –±—ã–ª –≤—ã–∑–≤–∞–Ω —Ç—Ä–∏ —Ä–∞–∑–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    assert mock_canvas.create_text.call_count == 3
    calls = [
        mock.call(10, 20, text='üí•', font=(80, 80), fill="white"),  # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        mock.call(10, 20, text='üí•', font=(60, 60), fill="orange"),
        mock.call(10, 20, text='üí•', font=(35, 35), fill="red")
    ]
    mock_canvas.create_text.assert_has_calls(calls)